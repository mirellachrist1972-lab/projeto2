# MVP mirella
#Projeto de MVP para agiula de ferramentas e solu√ß√µes em nuvem
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Atividade 01:
# Fazer seu primeiro web app com o streamlit, devendo realizar o deploy e postar o link
# Este app-web dever√° conter:
# 1) Seu nome
# 2) um tema que pretende tratar
# 3) A divis√£o das se√ß√µes do app, prevendo futura expans√£o para apresentar dados e gr√°ficos.
# 4) Bases de dados que imagina usar

st.title("üöÄ Iniciando meu primeiro app")
st.write ('**Distribui√ß√£o do PROGEFE nas escolas estaduais do ES em 2024.**')
st.text ('')
st.markdown ('üìå **Aluna**')
st.text ('Mirella Carla Mendes Christ')

# Configura√ß√£o inicial da p√°gina
st.set_page_config(
    page_title="Distribui√ß√£o do PROGEFE",
    page_icon="üìä",
    layout="wide"
)

# T√≠tulo principal
st.title("An√°lise dos valores do PROGEFE em 2025")
st.markdown("---")

# Se√ß√£o 1: Apresenta√ß√£o
st.header("Desenvolvedora")
st.write("*Mirella Carla Mendes Christ*")

# Se√ß√£o 2: Tema do projeto
st.header("Tema do Projeto")
st.write("Distribui√ß√£o dos recursos financeiros distribuidos atrav√©s do PROGEFE nas escolas estaduais do ES em 2024, com dashboards regionais e por escolas e superintend√™ncias.")

# Se√ß√£o 3: Estrutura do aplicativo
st.header("Estrutura do Aplicativo")
st.write("O aplicativo ser√° organizado nas seguintes se√ß√µes:")

col1, col2, col3 = st.columns(3)

with col1:
    st.subheader("üìà Dashboard Regional")
    st.write("Visualiza√ß√£o de valores em R$ por regi√£o geogr√°fica")

with col2:
    st.subheader("üè´ Dashboard por Escola")
    st.write("An√°lise detalhada de valores em R$ por unidade escolar")

with col3:
    st.subheader("üë• Dashboard por Superintend√™ncia")
    st.write("Visualiza√ß√£o dos valores em R$ por superintend√™ncias regionais")

# Se√ß√£o 4: Bases de dados
st.header("Bases de Dados")
st.write("Fontes de dados que ser√£o utilizadas no projeto:")

st.markdown("""
- Valores de distribui√ß√£o dos recursos do sistema e-gest√£o
- Registros de Institui√ß√µes de Ensino
- Dados dos valores por Superintend√™ncia """)

# Se√ß√£o 5: Pr√≥ximas etapas
st.header("Pr√≥ximas Etapas")
st.write("Para vers√µes futuras, planejamos implementar:")

st.markdown("""
1. Gr√°ficos interativos de evolu√ß√£o de matr√≠culas
2. Comparativos entre anos letivos
3. Indicadores de taxa de ocupa√ß√£o por escola
4. Previs√µes de demanda para pr√≥ximos per√≠odos
5. Relat√≥rios personalizados para gestores
""")

# Rodap√©
st.markdown("---")
st.markdown("Desenvolvido por Mirella Carla Mendes Christ - 2025")

# T√≠tulo do aplicativo
st.title("An√°lise de Arrecada√ß√£o por Escola e Munic√≠pio")

# Carregar dataset
@st.cache_data
def carregar_dados(name):
    df = pd.read_csv(name)
    return df

df = carregar_dados("dados_escolas.csv")

st.subheader("Dados Originais")
st.dataframe(df)

# 1. Gr√°fico de Barras: Valor arrecadado por Escola
st.subheader("Valor Arrecadado por Escola")
fig_escola, ax_escola = plt.subplots(figsize=(12, 7))
sns.barplot(x="nome_esc", y="val", data=df.sort_values(by="val", ascending=False).head(20), ax=ax_escola, palette="viridis")
ax_escola.set_xlabel("Nome da Escola")
ax_escola.set_ylabel("Valor Arrecadado")
ax_escola.set_title("Top 20 Escolas por Valor Arrecadado")
plt.xticks(rotation=90, fontsize=8)
plt.tight_layout()
st.pyplot(fig_escola)

# 2. Gr√°fico de Barras: Valor arrecadado por Munic√≠pio
st.subheader("Valor Arrecadado por Munic√≠pio")

# Agrupar por munic√≠pio e somar os valores
df_municipio_agg = df.groupby("mun")["val"].sum().reset_index()
fig_municipio, ax_municipio = plt.subplots(figsize=(12, 7))
sns.barplot(x="mun", y="val", data=df_municipio_agg.sort_values(by="val", ascending=False), ax=ax_municipio, palette="magma")
ax_municipio.set_xlabel("Munic√≠pio")
ax_municipio.set_ylabel("Valor Total Arrecadado")
ax_municipio.set_title("Valor Total Arrecadado por Munic√≠pio")
plt.xticks(rotation=90, fontsize=8)
plt.tight_layout()
st.pyplot(fig_municipio)

# Estat√≠sticas Descritivas
st.subheader("Estat√≠sticas Descritivas")
st.write(df.describe())

